<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"		
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           ">
    
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>
    
  	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
    <bean id="personDao" class="cn.jd.spring.jdbc.template.PersonDao">
    	<property name="dataSource">
    		<ref bean="dataSource"/>
    	</property>
    </bean>
    <bean id="personDao2" class="cn.jd.spring.jdbc.template.PersonDao2">
    	<property name="dataSource">
    		<ref bean="dataSource"/>
    	</property>
    </bean>
    <!-- 引入jdbcTemplate -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
    	<property name="dataSource">
    		<ref bean ="dataSource"/>
    	</property>
    </bean>
    <bean id="personDao2_1" class="cn.jd.spring.jdbc.template.PersonDao2">
    	<property name="jdbcTemplate">
    		<ref bean="jdbcTemplate"/>
    	</property>
    </bean>
    <bean id="personDao3" class="cn.jd.spring.jdbc.template.PersonDao3">
    	<property name="jdbcTemplate">
    		<ref bean="jdbcTemplate"/>
    	</property>
    </bean>
    <bean id="personDao4" class="cn.jd.spring.jdbc.template.PersonDao4">
    	<property name="dataSource">
    		<ref bean="dataSource"/>
    	</property>
    </bean>
    
    <!-- 
		把dao,service层的类放入到spring容器中
	 -->
	<bean id="personDao_1" class="cn.jd.spring.jdbc.transaction.PersonImpl">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
	</bean>
	<bean id="personService" class="cn.jd.spring.jdbc.transaction.PersonServiceImpl">
		<property name="personDao">
			<ref bean="personDao_1"/>
		</property>
	</bean>
    
    <!-- 
		事务管理器
	 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
	</bean>
	<!-- 
		规定事务的策略问题和事务管理器的问题
	 -->
	<tx:advice id="tx" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 
				name指定目标方法的范围
				  save*  就是以save开头的方法
				  propagation  传播属性
				      	用来解决嵌套事务的问题
				  isolation    隔离机制
				  read-only
				      true    只读事务
				      false   读写事务
			 -->
			<tx:method name="save*" 
				propagation="REQUIRED" 
				isolation="DEFAULT" 
				read-only="false"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut 
			expression="execution(* cn.jd.spring.jdbc.transaction.PersonServiceImpl.*(..))" 
			id="perform"/>
		<aop:advisor advice-ref="tx" pointcut-ref="perform"/>
	</aop:config>
    
</beans>